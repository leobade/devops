#!/bin/sh
# COMMIT_MSG_FILE=$1
# COMMIT_SOURCE=$2
# SHA1=$3

# branchPath=$(git symbolic-ref -q HEAD) #Somthing like refs/heads/myBranchName
# branchName=${branchPath##*/}      #Get text behind the last / of the branch path

# firstLine=$(head -n1 $1)

# if [ -z "$firstLine"  ] ;then #Check that this is not an amend by checking that the first line is empty
#     sed -i "1s/^/$branchName: \n/" $1 #Insert branch name at the start of the commit message file
# fi

branchPath=$(git symbolic-ref -q HEAD) #Somthing like refs/heads/myBranchName
branchName=${branchPath##*/}      #Get text behind the last / of the branch path

regex="((MBO|HB)-[0-9]*)"

if [[ $branchName =~ $regex ]]
then
    # Get the captured portion of the branch name.
    jiraTicketName="${BASH_REMATCH[1]}"

    originalMessage=`cat $1`

    # If the message already begins with PROJECTNAME-#, do not edit the commit message.
    if [[ $originalMessage == $jiraTicketName* ]]
        then
        exit
    fi

    if [[ $originalMessage =~ $regex ]]
    then
        jiraTicketNameInCommit="${BASH_REMATCH[1]}"
        echo $jiraTicketNameInCommit

        if [[ $originalMessage == $jiraTicketNameInCommit* ]]
        then
            exit
        fi
    fi

    if [ -z "$firstLine"  ] ;then #Check that this is not an amend by checking that the first line is empty
        # sed -i "1s/^/$branchName: \n/" $1 #Insert branch name at the start of the commit message file
        echo "****CUSTOM EDIT COMMIT MESSAGE*** Commit message edited: added Jira ticket name from the current branch (" $jiraTicketName ")"
        /usr/bin/sed -i '.bak' "1s/^/$jiraTicketName: /" $1 #Insert branch name at the start of the commit message file
    fi
fi
